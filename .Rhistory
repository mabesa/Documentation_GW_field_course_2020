pivot_longer(., contains('_mWC'),
names_to='Well',
names_prefix='P',
names_sep='\_',
values_to='pressure_mWC'))
head(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(., contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC'))
?separate
head(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into='Well','Unit',
sep='_'))
head(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'))
head(left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') )
head(left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))),# %>%
# #              select(`Elevation m a.s.l.`,Well),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + PressureWC_m,
Layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2')))
head(left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well'))
View(coord)
head(left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))),# %>%
# #              select(`Elevation m a.s.l.`,Well),
by='Well') )
head(left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + pressure_mWC,
Layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2'))
)
coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))
)
coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(-`Site Name`, -Parameters, -Type)
head(left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(-`Site Name`, -Parameters, -Type),
by='Well'))
head(left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(-`Site Name`, -Parameters, -Type),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + pressure_mWC,
Layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2')))
head(left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(-`Site Name`, -Parameters, -Type),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + pressure_mWC,
Layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2')))
P_pressure
P_pressure %>%
ggplot() +
geom_point(aes(x=Dte_CET, y=GWlevel_masl, col=Layer, shape=Well),
size=0.8) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
P_pressure %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Layer, shape=Well),
size=0.8) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
# Calculate the meter above sea level
P_pressure <- left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(-`Site Name`, -Parameters, -Type),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + pressure_mWC,
Layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2'))
P_pressure %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Layer, shape=Well),
size=0.8) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
P_pressure %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Layer),
size=0.8) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
View(P_pressure)
P_pressure %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Well),
size=0.8) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
P_pressure %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Well), size=0.2) +
facet_wrap('Layer') +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
# Read groundwater pressure data from files (one file per LoRaWan node).
Piezo_268 <- read.csv('_bookdown_files/data/pressure_GW_arc268.csv',
sep=';', dec='.',
colClasses=c('integer','character','character',
'numeric','numeric','numeric','numeric',
'numeric','numeric','numeric','numeric',
'numeric','numeric','numeric'),
col.names=c('index','Date_CET','Date_UTC','P2.1_bar',
'T2.1_degC','Pbaro268_bar','Tbaro268_degC',
'EC2.1_mScm','P3.2_bar','P4.1_bar',
'T3.2_degC','T4.1_degC','EC3.2_mScm',
'EC4.1_mScm'))
# Convert Time column to R-readable datetime format
Piezo_268$Date_CET <- as.POSIXct(Piezo_268$Date_CET,
format='%Y-%m-%d %H:%M:%S', tz='CET')
Piezo_268$Date_UTC <- as.POSIXct(Piezo_268$Date_UTC,
format='%Y-%m-%dT%H:%M:%S', tz='UTC')
Piezo_269 <- read.csv('_bookdown_files/data/pressure_GW_arc269.csv',
sep=';', dec='.',
colClasses=c('integer','character','character',
'numeric','numeric','numeric','numeric',
'numeric','numeric','numeric','numeric',
'numeric','numeric','numeric'),
col.names=c('index','Date_CET','Date_UTC','P6.2_bar',
'T6.2_degC','Pbaro269_bar','Tbaro269_degC',
'EC6.2_mScm','P6.1_bar','P7.2_bar',
'T6.1_degC','T7.2_degC','EC6.1_mScm',
'EC7.2_mScm'))
# Convert Time column to R-readable datetime format
Piezo_269$Date_CET <- as.POSIXct(Piezo_269$Date_CET,
format='%Y-%m-%d %H:%M:%S', tz='CET')
Piezo_269$Date_UTC <- as.POSIXct(Piezo_269$Date_UTC,
format='%Y-%m-%dT%H:%M:%S', tz='UTC')
# Merge the two data sets.
Piezo <- dplyr::full_join(Piezo_268, Piezo_269) %>%
dplyr::arrange(., Date_CET) %>%
select(-c(index, Date_UTC))
#rm(list=c('Piezo_268','Piezo_269'))
## Rough filtering for erroneous data
Piezo$P2.1_bar[Piezo$P2.1_bar>1.3] <- NA
Piezo$P6.2_bar[Piezo$P6.2_bar>1.3] <- NA
Piezo$Pbaro268_bar[Piezo$Pbaro268_bar<0.9] <- NA
Piezo$Pbaro269_bar[Piezo$Pbaro269_bar<0.9] <- NA
# Barometer data is not continuous. Add air pressure data from meteo station to fill in the gaps.
W <- read.csv('_bookdown_files/data/data_field_station.csv', skip=2, sep=',',
dec='.')
W$Timestamps <- as.POSIXct(W$Timestamps, format='%Y-%m-%d %H:%M:%S', tz='CET')
Piezo <- dplyr::full_join(Piezo,
W %>%
mutate(Wbaro_bar = rowMeans(cbind(kPa.Atmospheric.Pressure,
kPa.Reference.Pressure),
na.rm=TRUE) /100) %>%
select(c(Timestamps,Wbaro_bar)),
by = c('Date_CET'='Timestamps')) %>%
dplyr::arrange(Date_CET) %>%
mutate(Pbaro_mean_bar = na.approx(rowMeans(cbind(Pbaro268_bar,Pbaro269_bar,Wbaro_bar),
na.rm=TRUE), na.rm=FALSE, maxgap=10))
# Filter out values that were measured before the sensors were installed in Kappelen.
Piezo <- Piezo %>%
dplyr::filter(Date_CET > as.POSIXct("2019-09-05",format="%Y-%m-%d",tz='CET')) %>%
select(-Pbaro268_bar, -Pbaro269_bar, -Wbaro_bar) %>%
dplyr::mutate(P2.1_wc_bar = P2.1_bar - Pbaro_mean_bar,
P3.2_wc_bar = P3.2_bar - Pbaro_mean_bar,
P4.1_wc_bar = P4.1_bar - Pbaro_mean_bar,
P6.2_wc_bar = P6.2_bar - Pbaro_mean_bar,
P6.1_wc_bar = P6.1_bar - Pbaro_mean_bar,
P7.2_wc_bar = P7.2_bar - Pbaro_mean_bar)
Piezo$P2.1_wc_bar[Piezo$P2.1_wc_bar<0.1] <- NA
Piezo$P3.2_wc_bar[Piezo$P3.2_wc_bar<0.1] <- NA
Piezo$P4.1_wc_bar[Piezo$P4.1_wc_bar<0.1] <- NA
Piezo$P6.2_wc_bar[Piezo$P6.2_wc_bar<0.1] <- NA
Piezo$P6.1_wc_bar[Piezo$P6.1_wc_bar<0.1] <- NA
Piezo$P7.2_wc_bar[Piezo$P7.2_wc_bar<0.1] <- NA
## Calculate meter water column above the sensor.
# Assumption according to DIN 1301, Teil 3: Einheiten â€“ Umrechnung von Nicht-SI-Einheiten, 2018:
# 1 mWC = 98,0665 mbar
c_mWC_per_bar <- 98.0665/1000
Piezo <- Piezo %>%
dplyr::mutate(P2.1_mWC = P2.1_wc_bar * c_mWC_per_bar,
P3.2_mWC = P3.2_wc_bar * c_mWC_per_bar,
P4.1_mWC = P4.1_wc_bar * c_mWC_per_bar,
P6.2_mWC = P6.2_wc_bar * c_mWC_per_bar,
P6.1_mWC = P6.1_wc_bar * c_mWC_per_bar,
P7.2_mWC = P7.2_wc_bar * c_mWC_per_bar) %>%
select(-contains('_wc_bar'), -contains('baro'))
# Calculate the meter above sea level
P_pressure <- left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(-`Site Name`, -Parameters, -Type),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + pressure_mWC,
Layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2'))
P_pressure %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Well), size=0.2) +
facet_wrap('Layer') +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
?labs
?facet_wrap
levels(P_pressure$Layer)
unique(P_pressure$Layer)
P_pressure %>%
mutate(Layer = ifelse("1","Upper layer","Lower layer")) %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Well), size=0.2) +
facet_wrap('Layer') +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]', x='') +
scale_color_viridis_d()
head(P_pressure %>%
mutate(Layer = ifelse("1","Upper layer","Lower layer")) )
head(P_pressure)
P_pressure %>%
mutate(Layer = ifelse(Layer=="1","Upper layer","Lower layer")) %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Well), size=0.2) +
facet_wrap('Layer') +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]', x='') +
scale_color_viridis_d()
P_pressure %>%
mutate(Layer = ifelse(Layer=="1","Lower layer","Upper layer")) %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Well), size=0.2) +
facet_wrap('Layer') +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]', x='') #+
summary(P_pressure$Date_CET)
# Read groundwater pressure data from files (one file per LoRaWan node).
Piezo_268 <- read.csv('_bookdown_files/data/pressure_GW_arc268.csv',
sep=';', dec='.',
colClasses=c('integer','character','character',
'numeric','numeric','numeric','numeric',
'numeric','numeric','numeric','numeric',
'numeric','numeric','numeric'),
col.names=c('index','Date_CET','Date_UTC','P2.1_bar',
'T2.1_degC','Pbaro268_bar','Tbaro268_degC',
'EC2.1_mScm','P3.2_bar','P4.1_bar',
'T3.2_degC','T4.1_degC','EC3.2_mScm',
'EC4.1_mScm'))
# Convert Time column to R-readable datetime format
Piezo_268$Date_CET <- as.POSIXct(Piezo_268$Date_CET,
format='%Y-%m-%d %H:%M:%S', tz='CET')
Piezo_268$Date_UTC <- as.POSIXct(Piezo_268$Date_UTC,
format='%Y-%m-%dT%H:%M:%S', tz='UTC')
Piezo_269 <- read.csv('_bookdown_files/data/pressure_GW_arc269.csv',
sep=';', dec='.',
colClasses=c('integer','character','character',
'numeric','numeric','numeric','numeric',
'numeric','numeric','numeric','numeric',
'numeric','numeric','numeric'),
col.names=c('index','Date_CET','Date_UTC','P6.2_bar',
'T6.2_degC','Pbaro269_bar','Tbaro269_degC',
'EC6.2_mScm','P6.1_bar','P7.2_bar',
'T6.1_degC','T7.2_degC','EC6.1_mScm',
'EC7.2_mScm'))
# Convert Time column to R-readable datetime format
Piezo_269$Date_CET <- as.POSIXct(Piezo_269$Date_CET,
format='%Y-%m-%d %H:%M:%S', tz='CET')
Piezo_269$Date_UTC <- as.POSIXct(Piezo_269$Date_UTC,
format='%Y-%m-%dT%H:%M:%S', tz='UTC')
# Merge the two data sets.
Piezo <- dplyr::full_join(Piezo_268, Piezo_269) %>%
dplyr::arrange(., Date_CET) %>%
select(-c(index, Date_UTC))
#rm(list=c('Piezo_268','Piezo_269'))
## Rough filtering for erroneous data
Piezo$P2.1_bar[Piezo$P2.1_bar>1.3] <- NA
Piezo$P6.2_bar[Piezo$P6.2_bar>1.3] <- NA
Piezo$Pbaro268_bar[Piezo$Pbaro268_bar<0.9] <- NA
Piezo$Pbaro269_bar[Piezo$Pbaro269_bar<0.9] <- NA
# Barometer data is not continuous. Add air pressure data from meteo station to fill in the gaps.
W <- read.csv('_bookdown_files/data/data_field_station.csv', skip=2, sep=',',
dec='.')
W$Timestamps <- as.POSIXct(W$Timestamps, format='%Y-%m-%d %H:%M:%S', tz='CET')
Piezo <- dplyr::full_join(Piezo,
W %>%
mutate(Wbaro_bar = rowMeans(cbind(kPa.Atmospheric.Pressure,
kPa.Reference.Pressure),
na.rm=TRUE) /100) %>%
select(c(Timestamps,Wbaro_bar)),
by = c('Date_CET'='Timestamps')) %>%
dplyr::arrange(Date_CET) %>%
mutate(Pbaro_mean_bar = na.approx(rowMeans(cbind(Pbaro268_bar,Pbaro269_bar,Wbaro_bar),
na.rm=TRUE), na.rm=FALSE, maxgap=10))
# Filter out values that were measured before the sensors were installed in Kappelen.
Piezo <- Piezo %>%
dplyr::filter(Date_CET > as.POSIXct("2018-09-05",format="%Y-%m-%d",tz='CET')) %>%
select(-Pbaro268_bar, -Pbaro269_bar, -Wbaro_bar) %>%
dplyr::mutate(P2.1_wc_bar = P2.1_bar - Pbaro_mean_bar,
P3.2_wc_bar = P3.2_bar - Pbaro_mean_bar,
P4.1_wc_bar = P4.1_bar - Pbaro_mean_bar,
P6.2_wc_bar = P6.2_bar - Pbaro_mean_bar,
P6.1_wc_bar = P6.1_bar - Pbaro_mean_bar,
P7.2_wc_bar = P7.2_bar - Pbaro_mean_bar)
Piezo$P2.1_wc_bar[Piezo$P2.1_wc_bar<0.1] <- NA
Piezo$P3.2_wc_bar[Piezo$P3.2_wc_bar<0.1] <- NA
Piezo$P4.1_wc_bar[Piezo$P4.1_wc_bar<0.1] <- NA
Piezo$P6.2_wc_bar[Piezo$P6.2_wc_bar<0.1] <- NA
Piezo$P6.1_wc_bar[Piezo$P6.1_wc_bar<0.1] <- NA
Piezo$P7.2_wc_bar[Piezo$P7.2_wc_bar<0.1] <- NA
## Calculate meter water column above the sensor.
# Assumption according to DIN 1301, Teil 3: Einheiten â€“ Umrechnung von Nicht-SI-Einheiten, 2018:
# 1 mWC = 98,0665 mbar
c_mWC_per_bar <- 98.0665/1000
Piezo <- Piezo %>%
dplyr::mutate(P2.1_mWC = P2.1_wc_bar * c_mWC_per_bar,
P3.2_mWC = P3.2_wc_bar * c_mWC_per_bar,
P4.1_mWC = P4.1_wc_bar * c_mWC_per_bar,
P6.2_mWC = P6.2_wc_bar * c_mWC_per_bar,
P6.1_mWC = P6.1_wc_bar * c_mWC_per_bar,
P7.2_mWC = P7.2_wc_bar * c_mWC_per_bar) %>%
select(-contains('_wc_bar'), -contains('baro'))
# Calculate the meter above sea level
P_pressure <- left_join(Piezo %>%
select(Date_CET, contains('_mWC')) %>%
pivot_longer(contains('_mWC'),
names_to='Well',
names_prefix='P',
values_to='pressure_mWC') %>%
separate(col='Well',
into=c('Well',NA),
sep='_'),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(-`Site Name`, -Parameters, -Type),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + pressure_mWC,
Layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2'))
P_pressure %>%
mutate(Layer = ifelse(Layer=="1","Lower layer","Upper layer")) %>%
ggplot() +
geom_point(aes(x=Date_CET, y=GWlevel_masl, col=Well), size=0.2) +
facet_wrap('Layer') +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]', x='') #+
#  scale_color_viridis_d()
?drop_na
