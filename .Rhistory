head(P_pressure$Time)
head(as.POSIXct(P_pressure$Time, tz='UTM'))
head(as.POSIXct(P_pressure$Time, tz='GT'))
head(as.POSIXct(P_pressure$Time, tz='WET'))
head(as.POSIXct(P_pressure$Time, tz='UTC'))
head(as.POSIXct(P_pressure$Time, format='%Y-%m-%dT%H:%M:%S', tz='UTC'))
ggplot(P_pressure) +
geom_point(aes(x=Time, y=Value, col=Series))
?tidyverse
# For date-time handling
library(lubridate)
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
group_by(Series) %>%
summarise(Time = floor_date(Time, unit='days'),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
group_by(Series) %>%
mutate(Day = floor_date(Time, unit='days')) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
floor_date(head(P_pressure$Time), unit='days')
head(P_pressure$Time)
# Convert Time column to R-readable datetime format
P_pressure$Time <- as.POSIXct(P_pressure$Time, format='%Y-%m-%dT%H:%M:%S', tz='UTC')
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
group_by(Series) %>%
mutate(Day = floor_date(Time, unit='days')) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
View(P_pressure_daily)
View(P_pressure)
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Make sure pressure is a numeric value
P_pressure$Value <- as.numeric(P_pressure$Value)
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
View(P_pressure_daily)
ggplot(P_pressure_daily) +
geom_point(aes(x=Time, y=Value, col=Series))
ggplot(P_pressure_daily) +
geom_point(aes(x=Day, y=Pressure_mbar, col=Series))
# Read atmospheric pressure from file
W_airPressure <- read.csv2('_bookdown_files/data/weather_station_airPressure.csv')
# Convert Time column to R-readable datetime format
W_airPressure$Time <- as.POSIXct(W_airPressure$Time, format='%Y-%m-%dT%H:%M:%S', tz='UTC')
# Make sure pressure is a numeric value
W_airPressure$Value <- as.numeric(W_airPressure$Value)
# Read atmospheric pressure from file
W_airPressure <- read.csv2('_bookdown_files/data/weather_station_airPressure_kPa.csv')
# Convert Time column to R-readable datetime format
W_airPressure$Time <- as.POSIXct(W_airPressure$Time, format='%Y-%m-%dT%H:%M:%S', tz='UTC')
# Make sure pressure is a numeric value
W_airPressure$Value <- as.numeric(W_airPressure$Value)
# Read groundwater pressure data from file
P_pressure <- read.csv2('_bookdown_files/data/groundwater_pressure_mbar.csv')
# Convert Time column to R-readable datetime format
P_pressure$Time <- as.POSIXct(P_pressure$Time, format='%Y-%m-%dT%H:%M:%S', tz='UTC')
# Make sure pressure is a numeric value
P_pressure$Value <- as.numeric(P_pressure$Value)
# Read atmospheric pressure from file
W_airPressure <- read.csv2('_bookdown_files/data/weather_station_airPressure_kPa.csv')
# Convert Time column to R-readable datetime format
W_airPressure$Time <- as.POSIXct(W_airPressure$Time, format='%Y-%m-%dT%H:%M:%S', tz='UTC')
# Make sure pressure is a numeric value
W_airPressure$Value <- as.numeric(W_airPressure$Value) * 10  # from kPa to mbar
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
W_airPressure_daily <- W_airPressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
View(P_pressure_daily)
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
View(P_pressure_daily)
W_airPressure_daily <- W_airPressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Calculate pressure of water column above sensor
P_pressure_daily$Pressure_temp_mbar <- P_pressure_daily$Pressure_mbar - W_airPressure_daily$Pressure_mbar
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily, by='Day')
View(P_pressure_daily)
?left_join
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily, by='Day')
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily %>%
select(Day,Pressure_mbar), by='Day')
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily %>%
select(Day,Pressure_mbar), by='Day')
W_airPressure_daily <- W_airPressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
AirPressure_mbar = mean(Value, na.rm=TRUE))
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily %>%
select(Day,Pressure_mbar), by='Day') %>%
select(-Series.y)
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily %>%
select(Day,AirPressure_mbar), by='Day') %>%
select(-Series.y)
View(P_pressure_daily)
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily %>%
select(Day,AirPressure_mbar), by='Day') %>%
select(-Series.y) %>%
drop_na()
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily %>%
select(Day,AirPressure_mbar), by='Day') %>%
select(-Series.y) %>%
drop_na()
# Aggregate data to daily values
P_pressure_daily <- P_pressure %>%
mutate(Day = floor_date(Time, unit='days')) %>%
group_by(Series, Day) %>%
summarise(Time = first(Day),
Pressure_mbar = mean(Value, na.rm=TRUE))
# Calculate pressure of water column above sensor
P_pressure_daily <- left_join(P_pressure_daily, W_airPressure_daily %>%
select(Day,AirPressure_mbar), by='Day') %>%
select(-Series.y) %>%
drop_na() %>%
mutate(PressureWC_mbar = Pressure_mbar - AirPressure_mbar,
PressureWC_m = PressureWC_mbar/100)  # Rule of thumb: 1bar is approximately 10 m water column
ggplot(P_pressure_daily) +
geom_point(aes(x=Day, y=PressureWC_m, col=Series))
ggplot(P_pressure_daily) +
geom_point(aes(x=Day, y=PressureWC_m, col=Series.x))
# Filter outliers
P_pressure_daily$PressureWC_m[P_pressure_daily$PressureWC_m > 10] <- NA
ggplot(P_pressure_daily) +
geom_point(aes(x=Day, y=PressureWC_m, col=Series.x))
P_pressure_daily$PressureWC_m[P_pressure_daily$PressureWC_m < 0.8] <- NA
ggplot(P_pressure_daily) +
geom_point(aes(x=Day, y=PressureWC_m, col=Series.x))
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`),
by=c(Well))
P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x)))
head(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))))
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by=c(Well))
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by=Well)
head(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x)))
)
head(dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)))
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well')
View(P_altitude)
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`-3+1),
nchar(`Site Name`))),
by='Well')
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))),
by='Well')
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(`Elevation m a.s.l.`,Well),
by='Well')
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(`Elevation m a.s.l.`,Well),
by='Well') %>%
mutate(GWlevel_masl=Elevation m a.s.l.` -
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(`Elevation m a.s.l.`,Well),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + PressureWC_m)
ggplot(P_altitude) +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x))
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
drop_na() %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))) %>%
select(`Elevation m a.s.l.`,Well),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + PressureWC_m)
ggplot(P_altitude) +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x))
ggplot(P_altitude %>% select(-`Piezo 5.1`)) +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x))
ggplot(P_altitude %>% filter(-`Piezo 5.1`)) +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x))
?filter
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
drop_na() %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))),# %>%
#              select(`Elevation m a.s.l.`,Well),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + PressureWC_m)
P_altitude %>%
filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x))
P_altitude %>%
filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x), size=0.2)
# Nice coloring of plots
library(viridis)
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x), size=0.2) +
theme_bw()
?geom_point
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
drop_na() %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))),# %>%
#              select(`Elevation m a.s.l.`,Well),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + PressureWC_m,
layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1',1,2))
?labs
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x, shape=layer), size=0.2) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]')
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x, shape=as.character(layer)),
size=0.2) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]')
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Series.x, shape=factor(layer)),
size=0.2) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]')
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Well, shape=factor(layer)),
size=0.2) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]')
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Well, shape=factor(layer)),
size=0.5) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]')
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Well, shape=factor(layer)),
size=0.5) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_discrete('viridis')
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Well, shape=factor(layer)),
size=0.5) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Well, shape=layer),
size=0.5) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
drop_na() %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))),# %>%
#              select(`Elevation m a.s.l.`,Well),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + PressureWC_m,
layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2'))
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Well, shape=layer),
size=0.5) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
# Calculate altitude of groundwater level
P_altitude <- left_join(P_pressure_daily %>%
drop_na() %>%
mutate(Well=substr(Series.x,
nchar(Series.x)-3+1,
nchar(Series.x))),
dGW %>%
select(Well, `Sensor cable length [m]`) %>%
mutate(Well=as.character(Well)),
by='Well') %>%
left_join(., coord %>%
mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1,
nchar(`Site Name`))),# %>%
#              select(`Elevation m a.s.l.`,Well),
by='Well') %>%
mutate(GWlevel_masl=`Elevation m a.s.l.` -
`Sensor cable length [m]` + PressureWC_m,
Layer=ifelse(sub('.*(?=.$)', '', Well, perl=T)=='1','1','2'))
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Well, shape=Layer),
size=0.8) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
P_altitude %>%
dplyr::filter(Parameters=='P, T, EC') %>%
ggplot() +
geom_point(aes(x=Day, y=GWlevel_masl, col=Layer, shape=Well),
size=0.8) +
theme_bw() +
labs(y='Groundwater level [m a.s.l.]') +
scale_color_viridis_d()
