[
["index.html", "Documentation for the groundwater field course", " Documentation for the groundwater field course Beatrice Marti 2020-07-15 "],
["prerequisites.html", "Chapter 1 Prerequisites", " Chapter 1 Prerequisites The example code in this documentation can be used (optionally) as base for the completion of the tasks. Students are encouraged to install the software R for statistical programming (R Core Team 2020) and the user interface for R RStudio (RStudio Team 2020). On-line documentation and tutorials are available for R. This documentation uses the R packages markdown (Allaire et al. 2020) and bookdown (Xie 2020). Installation of these packages is not required to complete the tasks but students are encourage to try them out. The Rmd code can be viewed any time by clicking on the eye-symbol at the top of the page. All raw data is available via github. The following R packages are used in this documentation: # The tidy family library for data wrangling library(tidyverse, quietly=TRUE) # Reading data from excel library(readxl, quietly=TRUE) # For date-time handling library(lubridate, quietly=TRUE) # Spatial data plotting library(leaflet, quietly=TRUE) # Nice coloring of plots library(viridis, quietly=TRUE) # Interpolation of time series library(zoo, quietly=TRUE) References "],
["intro.html", "Chapter 2 Introduction 2.1 Hydrogeology of the Seeland aquifer 2.2 The Kappelen monitoring site", " Chapter 2 Introduction 2.1 Hydrogeology of the Seeland aquifer 2.2 The Kappelen monitoring site Figure 2.1 shows a map with the locations of the IfU monitoring locations. Figure 2.1: Kappelen site overview. Blue points indicate groundwater monitoring stations, yellow points indicate soil monitoring stations and the green point indicates the pressure sensor in the river Alte Aare. The two different types of boreholes present in Kappelen are shown schematically in Figure 2.2. Figure 2.2: Schematic of boreholes in the shallow and deep aquifer layer. Following common practice in hydrogeology, the boreholes are labeled in ascending order with the boreholes reaching to the oldest geological layers having the lowest suffix numbers. "],
["groundwater-levels-dynamics.html", "Chapter 3 Groundwater levels &amp; dynamics 3.1 The piezometric map &amp; time series data 3.2 Temporal evolution of groundater table 3.3 Temporal evolution of groundwater temperature 3.4 Temporal evolution of groundwater electrical conductivity", " Chapter 3 Groundwater levels &amp; dynamics 3.1 The piezometric map &amp; time series data A piezometric map (also called a map of hydro-isolines) describes groundwater state and sometimes even basic groundwater dynamics. It is derived from the pressure signal of groundwater. There are two methods which are typically used to measure groundwater pressure: (1) Distance from the well casing to the groundwater table with a dipper and (2) absolute groundwater pressure. In Kappelen, we measure both. 3.1.1 Measurement of distance to groundwater Distance to groundwater is measured with a dipper. Thereby, a weight attached to a measuring tape is lowered to the groundwater table. Low-cost, low-tech analogue dippers are widely used around the world but there are also electrical variants that give a light and/or sound signal when the dipper reachis the water table in the borehole (Figure 3.1). Figure 3.1: Schematic of boreholes in the shallow and deep aquifer layer. Dippers measure the distance from the rim of the borehole pipe to the water level in the borehole. In order to compute distance from the soil surface to the groundwater level, the distance between the rim of the borehole and the soil surface needs to be subtracted. In order to obtain the altitude of the groundwater table, the altitude of the rim of the borehole needs to be known and the distance to the groundwater subtracted (Figure 3.2). Figure 3.2: Schematic of the length measurements taken around a borehole to derive groundwater table. The rim of the borehole does generally not coincide with the groundwater level and needs to be leveled in. The distance to groundwater commonly refers to the distance between the soil surface and the water level measured in the borehole. With a manual dipper, the distance between the rim of the borehole and the groundwater level is measured. Finally, a diver pressure sensor measures the absolute pressure of water and air above the sensor opening and needs to be corrected with measurements of air pressure. Measurements of distance to groundwater measured by students during the groundwater field course in June 2019 are presented in # Read in depth to groundwater table dGW &lt;- readxl::read_xlsx(&#39;_bookdown_files/data/depth_to_groundwater.xlsx&#39;) knitr::kable( dGW %&gt;% select(-`Sensor cable length [m]`), booktabs = TRUE, caption = &#39;Distance to groundwater measured by 4 different student groups.&#39; ) Table 3.1: Distance to groundwater measured by 4 different student groups. Well Distance to GW A [m] Distance to GW B [m] Distance to GW C [m] Distance to GW D [m] 1.1 3.58 3.57 3.57 3.570 1.2 3.81 3.82 4.07 3.810 2.1 3.54 3.55 3.54 3.555 2.2 3.56 3.57 3.54 3.570 3.1 3.74 3.75 3.90 3.750 3.2 3.84 3.84 4.10 3.850 4.1 3.94 3.95 4.31 3.940 4.2 3.93 3.94 4.29 3.940 5.1 2.96 2.97 2.29 2.970 5.2 3.27 3.27 2.90 3.280 6.1 3.66 3.66 3.68 3.655 6.2 3.66 3.66 3.70 3.675 7.1 3.54 3.55 3.47 3.730 7.2 3.73 3.74 3.85 3.545 8.1 3.72 3.73 3.84 3.725 9.1 3.78 3.79 3.89 3.800 Task 1: Estimate the accuracy of the measurement of distance to groundwater based on the data above Help: The data is available on github (press “download” or “view raw” and an excel document is downloaded to your computer). Task 2: Calculate the groundwater level Help: The altitude of the rims of the well casings are available on github (press “download” or “view raw” and an excel document is downloaded to your computer). The altitude of the borehole casings is accurate down to approximately 0.5cm. Task 3: Draw a piezometric map of groundwater levels in Kappelen Help: Perform a Kriging interpolation seperately for the two aquifer layers. In R, the package gstat offers a krige routine (Pebesma 2004). 3.1.2 Measurement of absolute pressure The development of the pressure signal in the groundwater is measured with pressure sensors. Commonly, the absolute pressure is measured, i.e. atmospheric pressure plus the pressure of the water column above the sensor. The atmospheric pressure has to be measured above the water table and subtracted from the absolute pressure. From the pressure of the water column above the sensor, a temperature dependent conversion to m of water column is done to derive the height of the water column above the pressure sensor. Finally, to obtain the groundwater level, the length of the sensor cable has to be known (Figure 3.2). In Kappelen, groundwater pressure is monitored continuously in 11 Piezometers, of which 6 sensors send hourly data to the cloud. The code below illustrates how to derive groundwater levels from measurements of absolute water pressure and atmospheric pressure. To reproduce the comptuations, download the input files from github, make sure the packages in Chapter 1 are installed and loaded in your R session, copy paste the code below to your R script and adapt the file paths. The average daily groundwater levels can be downloaded from github # Read groundwater pressure data from files (one file per LoRaWan node). Piezo_268 &lt;- read.csv(&#39;_bookdown_files/data/pressure_GW_arc268.csv&#39;, sep=&#39;;&#39;, dec=&#39;.&#39;, colClasses=c(&#39;integer&#39;,&#39;character&#39;,&#39;character&#39;, &#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;, &#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;, &#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;), col.names=c(&#39;index&#39;,&#39;Date_CET&#39;,&#39;Date_UTC&#39;,&#39;P2.1_bar&#39;, &#39;T2.1_degC&#39;,&#39;Pbaro268_bar&#39;,&#39;Tbaro268_degC&#39;, &#39;EC2.1_mScm&#39;,&#39;P3.2_bar&#39;,&#39;P4.1_bar&#39;, &#39;T3.2_degC&#39;,&#39;T4.1_degC&#39;,&#39;EC3.2_mScm&#39;, &#39;EC4.1_mScm&#39;)) # Convert Time column to R-readable datetime format Piezo_268$Date_CET &lt;- as.POSIXct(Piezo_268$Date_CET, format=&#39;%Y-%m-%d %H:%M:%S&#39;, tz=&#39;CET&#39;) Piezo_268$Date_UTC &lt;- as.POSIXct(Piezo_268$Date_UTC, format=&#39;%Y-%m-%dT%H:%M:%S&#39;, tz=&#39;UTC&#39;) Piezo_269 &lt;- read.csv(&#39;_bookdown_files/data/pressure_GW_arc269.csv&#39;, sep=&#39;;&#39;, dec=&#39;.&#39;, colClasses=c(&#39;integer&#39;,&#39;character&#39;,&#39;character&#39;, &#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;, &#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;, &#39;numeric&#39;,&#39;numeric&#39;,&#39;numeric&#39;), col.names=c(&#39;index&#39;,&#39;Date_CET&#39;,&#39;Date_UTC&#39;,&#39;P6.2_bar&#39;, &#39;T6.2_degC&#39;,&#39;Pbaro269_bar&#39;,&#39;Tbaro269_degC&#39;, &#39;EC6.2_mScm&#39;,&#39;P6.1_bar&#39;,&#39;P7.2_bar&#39;, &#39;T6.1_degC&#39;,&#39;T7.2_degC&#39;,&#39;EC6.1_mScm&#39;, &#39;EC7.2_mScm&#39;)) # Convert Time column to R-readable datetime format Piezo_269$Date_CET &lt;- as.POSIXct(Piezo_269$Date_CET, format=&#39;%Y-%m-%d %H:%M:%S&#39;, tz=&#39;CET&#39;) Piezo_269$Date_UTC &lt;- as.POSIXct(Piezo_269$Date_UTC, format=&#39;%Y-%m-%dT%H:%M:%S&#39;, tz=&#39;UTC&#39;) # Merge the two data sets. Piezo &lt;- dplyr::full_join(Piezo_268, Piezo_269, by = c(&quot;index&quot;, &quot;Date_CET&quot;, &quot;Date_UTC&quot;)) %&gt;% dplyr::arrange(., Date_CET) %&gt;% select(-c(index, Date_UTC)) ## Rough filtering for erroneous data Piezo$P2.1_bar[Piezo$P2.1_bar&gt;1.3] &lt;- NA Piezo$P6.2_bar[Piezo$P6.2_bar&gt;1.3] &lt;- NA Piezo$Pbaro268_bar[Piezo$Pbaro268_bar&lt;0.9] &lt;- NA Piezo$Pbaro269_bar[Piezo$Pbaro269_bar&lt;0.9] &lt;- NA Piezo$T2.1_degC[Piezo$T2.1_degC&gt;13] &lt;- NA Piezo$T3.2_degC[Piezo$T3.2_degC&gt;13] &lt;- NA Piezo$T4.1_degC[Piezo$T4.1_degC&gt;13] &lt;- NA Piezo$T6.2_degC[Piezo$T6.2_degC&gt;13] &lt;- NA Piezo$T6.1_degC[Piezo$T6.1_degC&gt;12.5] &lt;- NA Piezo$T7.2_degC[Piezo$T7.2_degC&gt;13] &lt;- NA Piezo$T2.1_degC[Piezo$T2.1_degC&lt;5] &lt;- NA Piezo$T3.2_degC[Piezo$T3.2_degC&lt;5] &lt;- NA Piezo$T4.1_degC[Piezo$T4.1_degC&lt;5] &lt;- NA Piezo$T6.2_degC[Piezo$T6.2_degC&lt;5] &lt;- NA Piezo$T6.1_degC[Piezo$T6.1_degC&lt;5] &lt;- NA Piezo$T7.2_degC[Piezo$T7.2_degC&lt;5] &lt;- NA Piezo$EC2.1_mScm[Piezo$EC2.1_mScm&lt;0.4] &lt;- NA Piezo$EC3.2_mScm[Piezo$EC3.2_mScm&lt;0.4] &lt;- NA Piezo$EC4.1_mScm[Piezo$EC4.1_mScm&lt;0.4] &lt;- NA Piezo$EC6.2_mScm[Piezo$EC6.2_mScm&lt;0.4] &lt;- NA Piezo$EC6.1_mScm[Piezo$EC6.1_mScm&lt;0.4] &lt;- NA Piezo$EC7.2_mScm[Piezo$EC7.2_mScm&lt;0.4] &lt;- NA # Barometer data is not continuous. Add air pressure data from meteo station to fill in the gaps. W &lt;- read.csv(&#39;_bookdown_files/data/data_field_station.csv&#39;, skip=2, sep=&#39;,&#39;, dec=&#39;.&#39;) W$Timestamps &lt;- as.POSIXct(W$Timestamps, format=&#39;%Y-%m-%d %H:%M:%S&#39;, tz=&#39;CET&#39;) Piezo &lt;- dplyr::full_join(Piezo, W %&gt;% mutate(Wbaro_bar = rowMeans(cbind(kPa.Atmospheric.Pressure, kPa.Reference.Pressure), na.rm=TRUE) /100) %&gt;% select(c(Timestamps,Wbaro_bar)), by = c(&#39;Date_CET&#39;=&#39;Timestamps&#39;)) %&gt;% dplyr::arrange(Date_CET) %&gt;% mutate(Pbaro_mean_bar = na.approx(rowMeans(cbind(Pbaro268_bar,Pbaro269_bar,Wbaro_bar), na.rm=TRUE), na.rm=FALSE, maxgap=10)) # Filter out values that were measured before the sensors were installed in Kappelen. And data that was written during field work. Piezo &lt;- Piezo %&gt;% dplyr::filter(Date_CET &gt; as.POSIXct(&quot;2018-09-05&quot;,format=&quot;%Y-%m-%d&quot;,tz=&#39;CET&#39;)) %&gt;% dplyr::filter((Date_CET &lt; as.POSIXct(&quot;2019-06-03&quot;,format=&quot;%Y-%m-%d&quot;,tz=&#39;CET&#39;)) | (Date_CET &gt; as.POSIXct(&quot;2019-06-07&quot;,format=&quot;%Y-%m-%d&quot;,tz=&#39;CET&#39;))) %&gt;% # Field course dplyr::filter(Date_CET != as.POSIXct(&quot;2019-10-24&quot;,format=&quot;%Y-%m-%d&quot;,tz=&#39;CET&#39;)) %&gt;% # Maintenance select(-Pbaro268_bar, -Pbaro269_bar, -Wbaro_bar) %&gt;% dplyr::mutate(P2.1_wc_bar = P2.1_bar - Pbaro_mean_bar, P3.2_wc_bar = P3.2_bar - Pbaro_mean_bar, P4.1_wc_bar = P4.1_bar - Pbaro_mean_bar, P6.2_wc_bar = P6.2_bar - Pbaro_mean_bar, P6.1_wc_bar = P6.1_bar - Pbaro_mean_bar, P7.2_wc_bar = P7.2_bar - Pbaro_mean_bar) Piezo$P2.1_wc_bar[Piezo$P2.1_wc_bar&lt;0.1] &lt;- NA Piezo$P3.2_wc_bar[Piezo$P3.2_wc_bar&lt;0.1] &lt;- NA Piezo$P4.1_wc_bar[Piezo$P4.1_wc_bar&lt;0.1] &lt;- NA Piezo$P6.2_wc_bar[Piezo$P6.2_wc_bar&lt;0.1] &lt;- NA Piezo$P6.1_wc_bar[Piezo$P6.1_wc_bar&lt;0.1] &lt;- NA Piezo$P7.2_wc_bar[Piezo$P7.2_wc_bar&lt;0.1] &lt;- NA ## Calculate meter water column above the sensor. # Assumption 1 mWC = 98,0665 mbar c_mWC_per_bar &lt;- 98.0665/1000 Piezo &lt;- Piezo %&gt;% dplyr::mutate(P2.1_mWC = P2.1_wc_bar * c_mWC_per_bar, P3.2_mWC = P3.2_wc_bar * c_mWC_per_bar, P4.1_mWC = P4.1_wc_bar * c_mWC_per_bar, P6.2_mWC = P6.2_wc_bar * c_mWC_per_bar, P6.1_mWC = P6.1_wc_bar * c_mWC_per_bar, P7.2_mWC = P7.2_wc_bar * c_mWC_per_bar) %&gt;% select(-contains(&#39;_wc_bar&#39;), -contains(&#39;baro&#39;)) # Calculate the meter above sea level P_pressure &lt;- left_join(Piezo %&gt;% select(Date_CET, contains(&#39;_mWC&#39;)) %&gt;% pivot_longer(contains(&#39;_mWC&#39;), names_to=&#39;Well&#39;, names_prefix=&#39;P&#39;, values_to=&#39;pressure_mWC&#39;) %&gt;% separate(col=&#39;Well&#39;, into=c(&#39;Well&#39;,NA), sep=&#39;_&#39;), dGW %&gt;% select(Well, `Sensor cable length [m]`) %&gt;% mutate(Well=as.character(Well)), by=&#39;Well&#39;) %&gt;% left_join(coord %&gt;% mutate(Well=substr(`Site Name`, nchar(`Site Name`)-3+1, nchar(`Site Name`))) %&gt;% select(-`Site Name`, -Parameters, -Type), by=&#39;Well&#39;) %&gt;% mutate(GWlevel_masl=`Elevation m a.s.l.` - `Sensor cable length [m]` + pressure_mWC, Layer=ifelse(sub(&#39;.*(?=.$)&#39;, &#39;&#39;, Well, perl=T)==&#39;1&#39;,&#39;1&#39;,&#39;2&#39;)) ## Aggregate the cleaned groundwater levels to daily data and write to a file. P_pressure %&gt;% select(Date_CET, Well, GWlevel_masl) %&gt;% drop_na() %&gt;% pivot_wider(names_from = Well, values_from = GWlevel_masl, values_fn = first) %&gt;% mutate(Date_CET = floor_date(Date_CET, unit = &quot;days&quot;)) %&gt;% group_by(Date_CET) %&gt;% summarise(Date_CET = first(Date_CET), P2.1 = mean(`2.1`, na.rm = TRUE), P3.2 = mean(`3.2`, na.rm = TRUE), P7.2 = mean(`7.2`, na.rm = TRUE), P6.2 = mean(`6.2`, na.rm = TRUE), P6.1 = mean(`6.1`, na.rm = TRUE), P4.1 = mean(`4.1`, na.rm = TRUE)) %&gt;% write.table(., file=&#39;_bookdown_files/data/groundwater_levels_masl.csv&#39;, sep=&#39;;&#39;, dec=&#39;.&#39;, col.names=TRUE, row.names=FALSE) ## `summarise()` ungrouping output (override with `.groups` argument) It is a long way from raw data (Figure 3.3 right) to polished data that can be used for further analysis (Figure 3.3 left). Figure 3.3: Data measured in piezometer 2.1 prior to data cleaning (right) and posterior to data cleaning (left). Task 4: Temperature-dependent conversion of groundwater pressure to meters of water column The conversion of pressure to meters of water column is temperature dependent. In the above code, the temperature dependence is neglected. Look up the temperature dependency of water and estimate the error that we make if we neglect the temperature-dependency in the pressure conversion in our data from Kappelen. Are there other properties that we measure in Kappelen and that affect the density of water? Help: In the code above we assume that 1 mWC = 98,0665 mbar. This assumption is true for a water temperature of approximately 15°C. 3.2 Temporal evolution of groundater table Figure 3.4 shows the measured groundwater levels in the 6 on-line sensors over time. ## Warning: Removed 577531 rows containing missing values (geom_point). Figure 3.4: Time series of groundwater levels in the 6 on-line monitoring stations. The groundwater table gradient in the lower aquifer layer is larger than in the upper aquifer layer. The development of the groundwater levels is similar. Task 5: Similarity of time series Verify if the development of the groundwater table in the 6 on-line wells is indeed similar or if there are differences between the wells. Try to explain the differences. Note: The data is available on github. 3.3 Temporal evolution of groundwater temperature Figure 3.5 shows the measured temperature in 6 monitoring boreholes in Kappelen. The daily average groundwater temperatures are available on github. Figure 3.5: Measured groundwater temperatures at 6 boreholes in Kappelen. ## `summarise()` ungrouping output (override with `.groups` argument) Task 6: Discuss the temperature time series Leave out the data from borehole 3.2. Describe the patterns and differences you see in the time series. What could cause these differences? 3.4 Temporal evolution of groundwater electrical conductivity Figure 3.6 shows the measured electrical conductivity in 6 monitoring boreholes in Kappelen. The daily average groundwater electrical conductivity is available on github. Figure 3.6: Measured groundwater temperatures at 6 boreholes in Kappelen. ## `summarise()` ungrouping output (override with `.groups` argument) Task 7: Electrical conductivity signals Compare the temperature time series with the time series of electrical conductivity. Can you correlate the two variables? In borehole 4.1 we measured a peak of electrical conductivity in early summer 2019. This peak is not caused by our activity in the groundwater field course (visible as a data gap in early June 2019 in Figure 3.6). Compare the signal of electrical conductivity in borehole 4.1 with the precipitation and river discharge data (TO PREPARE). Task 8: Conclusion Make a conclusion of what you learned in this chapter. References "],
["measurement-of-aquifer-properties.html", "Chapter 4 Measurement of aquifer properties 4.1 Flow meter test 4.2 Dilution test 4.3 Slug test 4.4 Pumping test 4.5 Tracer test", " Chapter 4 Measurement of aquifer properties From very local measurements to regional parameter assessments 4.1 Flow meter test This section presents the data available for evaluationg a flowmeter experiment. The raw data can be downloaded from github. Data set 1 was measured in borehole 6.1. The groundwater table was at 3.75m below the rim of the borehole. The screened section of the borehole is between 9.5m and 14.5m below the rim. The diameter of the borehole is 10.5cm. The flowmeter was moved at a constant speed of 7m/s for the experiments labeled contl in Figure 4.1. In a second experiment, point measurements were taken at intervals of 50cm (labeled point in Figure 4.1). Figure 4.1: Data set 1 of the flow meter test in borehole 6.1. cont and point indicate continuous lowering &amp; rising of the flow meter and point measurements at defined depths respectively under non-pumping conditions. 4.1.0.1 Task 10: Evaluate flow meter test Follow the steps in (Molz et al. 1989) to determine flow velocities and hydaulic conductivities along the borehole. 4.2 Dilution test 4.3 Slug test 4.4 Pumping test 4.5 Tracer test References "],
["water-flow-processes-in-the-unsaturated-zone.html", "Chapter 5 Water flow processes in the unsaturated zone 5.1 Soil water content &amp; suction 5.2 Soil infiltration capacity 5.3 Aquifer recharge from precipitation", " Chapter 5 Water flow processes in the unsaturated zone 5.1 Soil water content &amp; suction 5.2 Soil infiltration capacity 5.3 Aquifer recharge from precipitation "],
["references.html", "References", " References "]
]
